From 70f7b930ac32c5941ae2737a6772116dfa89fca1 Mon Sep 17 00:00:00 2001
From: heyang <heyang@weiboyi.com>
Date: Mon, 20 May 2024 15:16:26 +0800
Subject: [PATCH 01/10] string_frida_rpc

---
 lib/base/rpc.vala | 14 +++++++++++---
 1 file changed, 11 insertions(+), 3 deletions(-)

diff --git a/lib/base/rpc.vala b/lib/base/rpc.vala
index 3695ba8c..11428fac 100644
--- a/lib/base/rpc.vala
+++ b/lib/base/rpc.vala
@@ -10,6 +10,14 @@ namespace Frida {
 		public RpcClient (RpcPeer peer) {
 			Object (peer: peer);
 		}
+		public string getRpcStr(bool quote){
+			string result = (string) GLib.Base64.decode((string) GLib.Base64.decode("Wm5KcFpHRTZjbkJq"));
+			if(quote){
+				return "\"" + result + "\"";
+			}else{
+				return result;
+			}
+		}
 
 		public async Json.Node call (string method, Json.Node[] args, Cancellable? cancellable) throws Error, IOError {
 			string request_id = Uuid.string_random ();
@@ -17,7 +25,7 @@ namespace Frida {
 			var request = new Json.Builder ();
 			request
 				.begin_array ()
-				.add_string_value ("frida:rpc")
+				.add_string_value (getRpcStr(true))
 				.add_string_value (request_id)
 				.add_string_value ("call")
 				.add_string_value (method)
@@ -70,7 +78,7 @@ namespace Frida {
 		}
 
 		public bool try_handle_message (string json) {
-			if (json.index_of ("\"frida:rpc\"") == -1)
+			if (json.index_of (getRpcStr(true)) == -1)
 				return false;
 
 			var parser = new Json.Parser ();
@@ -99,7 +107,7 @@ namespace Frida {
 				return false;
 
 			string? type = rpc_message.get_element (0).get_string ();
-			if (type == null || type != "frida:rpc")
+			if (type == null || type != getRpcStr(true))
 				return false;
 
 			var request_id_value = rpc_message.get_element (1);
-- 
2.39.2 (Apple Git-143)

